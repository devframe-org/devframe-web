<?xml version="1.0" encoding="UTF-8" ?>

<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

	<http auto-config="true" use-expressions="true">
		<!-- <intercept-url pattern="/login" access="permitAll" />
		<intercept-url pattern="/resources/**" access="permitAll" />
		<intercept-url pattern="/**" access="hasRole('USER')" /> -->
		<!-- authentication-failure-url="/login?error" -->
		<!-- default-target-url="/" -->
		<!-- always-use-default-target="true" -->
		<form-login login-page="/login"
			username-parameter="userId"
			password-parameter="passwd"
			login-processing-url="/loginProc"
			authentication-success-handler-ref="customAuthenticationSuccessHandler"
			authentication-failure-handler-ref="customAuthenticationFailureHandler" />
		<!-- logout-success-url="/login?logout" -->
		<logout logout-url="/logout"
			success-handler-ref="customLogoutSuccessHandler"
			invalidate-session="true" />
			<csrf disabled="true" />
		<custom-filter before="FILTER_SECURITY_INTERCEPTOR" ref="filterSecurityInterceptor" />
		<access-denied-handler ref="customAccessDeniedHandler" />
		<session-management>
			<concurrency-control max-sessions="1" expired-url="/loginDuplicated" />
		</session-management>
	</http>

	<authentication-manager>
		<authentication-provider user-service-ref="userDetailsService2">
			<!-- <password-encoder ref="bcryptPasswordEncoder" /> -->
		</authentication-provider>
	</authentication-manager>

	<beans:bean id="bcryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

	<beans:bean id="customAuthenticationSuccessHandler" class="org.devframe.web.common.security.CustomAuthenticationSuccessHandler">
		<beans:property name="targetUrlParameter" value="loginRedirect" />
		<beans:property name="defaultTargetUrl" value="/" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="false" />
		<beans:property name="useReferer" value="false" />
   	</beans:bean>

	<beans:bean id="customAuthenticationFailureHandler" class="org.devframe.web.common.security.CustomAuthenticationFailureHandler">
		<beans:property name="defaultFailureUrl" value="/login?error" />
		<beans:property name="forwardToDestination" value="false" />
		<beans:property name="allowSessionCreation" value="true" />
   	</beans:bean>

	<beans:bean id="customAccessDeniedHandler" class="org.devframe.web.common.security.CustomAccessDeniedHandler">
		<beans:property name="errorPage" value="/accessDenied" />
   	</beans:bean>

	<beans:bean id="customLogoutSuccessHandler" class="org.devframe.web.common.security.CustomLogoutSuccessHandler">
		<beans:property name="targetUrlParameter" value="logoutRedirect" />
		<beans:property name="defaultTargetUrl" value="/" />
		<beans:property name="alwaysUseDefaultTargetUrl" value="false" />
		<beans:property name="useReferer" value="false" />
   	</beans:bean>

	<beans:bean id="filterSecurityInterceptor" class="org.springframework.security.web.access.intercept.FilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="org.springframework.security.authenticationManager" />
		<beans:property name="securityMetadataSource" ref="customFilterInvocationSecurityMetadataSource" />
		<beans:property name="accessDecisionManager" ref="accessDecisionManager" />
	</beans:bean>

	<beans:bean id="customFilterInvocationSecurityMetadataSource" class="org.devframe.web.common.security.CustomFilterInvocationSecurityMetadataSource">
		<beans:constructor-arg ref="requestMap" />
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>

	<beans:bean id="requestMap" class="org.devframe.web.common.security.CustomResourceMapFactoryBean" init-method="init">
		<beans:property name="securedObjectService" ref="securedObjectService" />
	</beans:bean>

	<beans:bean id="accessDecisionManager" class="org.springframework.security.access.vote.AffirmativeBased">
		<beans:constructor-arg>
			<beans:list>
				<beans:bean class="org.springframework.security.access.vote.AuthenticatedVoter" />
				<beans:bean class="org.springframework.security.access.vote.RoleVoter">
					<!-- beans:property name="rolePrefix" value="" / -->
				</beans:bean>
				<beans:ref bean="roleHierarchyVoter" />
			</beans:list>
		</beans:constructor-arg>
		<beans:property name="allowIfAllAbstainDecisions" value="false" />
	</beans:bean>

	<beans:bean id="roleHierarchy" class="org.springframework.security.access.hierarchicalroles.RoleHierarchyImpl">
		<beans:property name="hierarchy">
			<beans:value>
				ROLE_ADMIN > ROLE_AGENT01
				ROLE_ADMIN > ROLE_AGENT02
				ROLE_AGENT01 > ROLE_USER
				ROLE_AGENT02 > ROLE_USER
				ROLE_USER > ROLE_ANONYMOUS
			</beans:value>
		</beans:property>
	</beans:bean>

	<beans:bean id="roleHierarchyVoter" class="org.springframework.security.access.vote.RoleHierarchyVoter">
		<beans:constructor-arg ref="roleHierarchy" />
		<!-- beans:property name="rolePrefix" value="" / -->
	</beans:bean>

</beans:beans>